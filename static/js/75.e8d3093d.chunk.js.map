{"version":3,"file":"static/js/75.e8d3093d.chunk.js","mappings":"uOACA,GAAgB,SAAW,4BAA4B,UAAY,6BAA6B,UAAY,6BAA6B,WAAa,8BAA8B,WAAa,8BAA8B,IAAM,uBAAuB,KAAO,wBAAwB,OAAS,0BAA0B,YAAc,+BAA+B,SAAW,6B,SCUvW,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MACAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcJ,EAASI,QACjD,CAACR,IACJ,IAAMS,EAAOC,OAAOP,EAAMQ,cAAcC,MAAM,EAAG,GAC3CC,EAAiC,GAArBV,EAAMW,aAChBC,EAAkDZ,EAAlDY,eAAgBC,EAAkCb,EAAlCa,SAAUC,EAAwBd,EAAxBc,OAAQC,EAAgBf,EAAhBe,YACpCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,4BACE,0BACE,mBAAQC,UAAWC,EAAAA,IAAOC,QANf,WAAO,IAAD,IACrBJ,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUO,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAK9B,wBAKF,iBAAKJ,UAAWC,EAAAA,UAAhB,WACE,gBACEI,IAAK,mCAAqCV,EAC1CW,IAAKd,EACLQ,UAAWC,EAAAA,YAEb,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,gBAAID,UAAWC,EAAAA,MAAf,UACGT,EADH,IACoB,IAAMN,EAAO,QAEjC,wCAAgBI,EAAhB,QACA,sCACA,uBAAIG,KACJ,oCACCC,IACC,eAAIM,UAAWC,EAAAA,WAAf,SACGP,EAAOa,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjB,OACE,eAAIT,UAAWC,EAAAA,WAAf,SACGQ,GAD+BD,eAS9C,iBAAKR,UAAWC,EAAAA,YAAhB,WACE,oDACA,SAAC,KAAD,CACES,GAAG,OACHV,UAAW,SAAAW,GAAO,OAAKA,EAAQC,SAAWX,EAAAA,OAAWA,EAAAA,MAFvD,mBAMA,SAAC,KAAD,CACES,GAAG,UACHV,UAAW,SAAAW,GAAO,OAAKA,EAAQC,SAAWX,EAAAA,OAAWA,EAAAA,MAFvD,sBAMA,SAAC,KAAD,Y,0MCzEFY,EAAU,mCACVC,EAAM,gCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,UAClBF,EADkB,uCACgBD,IAFlC,cACCI,EADD,yBAIEA,GAJF,kEAOA,SAAelC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BN,GAA5B,uFACkBuC,IAAAA,IAAA,UAAaF,EAAb,iBAAyBrC,EAAzB,oBAA4CoC,IAD9D,cACCI,EADD,yBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzC,GAA5B,uFACkBuC,IAAAA,IAAA,UAClBF,EADkB,iBACNrC,EADM,4BACqBoC,IAFvC,cACCI,EADD,yBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8B1C,GAA9B,uFACkBuC,IAAAA,IAAA,UAClBF,EADkB,iBACNrC,EADM,4BACqBoC,IAFvC,cACCI,EADD,yBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAqCC,GAArC,uFACkBL,IAAAA,IAAA,6DACiCH,EADjC,kBACkDQ,EADlD,YADlB,cACCJ,EADD,yBAKEA,GALF","sources":["webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieImg\":\"MovieInfo_movieImg__jcUpO\",\"movieCard\":\"MovieInfo_movieCard__GjFAr\",\"movieInfo\":\"MovieInfo_movieInfo__LxIpr\",\"itemGenres\":\"MovieInfo_itemGenres__7F6Ll\",\"listGenres\":\"MovieInfo_listGenres__pdz8O\",\"btn\":\"MovieInfo_btn__zw5mn\",\"link\":\"MovieInfo_link__KJLIh\",\"active\":\"MovieInfo_active__XQDP5\",\"linkSection\":\"MovieInfo_linkSection__I24Gu\",\"linkList\":\"MovieInfo_linkList__roI9H\"};","import {\n  useParams,\n  NavLink,\n  Outlet,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieById } from 'services/api';\nimport s from './MovieInfo.module.css';\n\nexport default function MovieInfo() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  useEffect(() => {\n    getMovieById(movieId).then(({ data }) => setMovie(data));\n  }, [movieId]);\n  const Date = String(movie.release_date).slice(0, 4);\n  const userScore = movie.vote_average * 10;\n  const { original_title, overview, genres, poster_path } = movie;\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const comeBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n  return (\n    <div>\n      <div>\n        <button className={s.btn} onClick={comeBack}>\n          Go back\n        </button>\n      </div>\n\n      <div className={s.movieCard}>\n        <img\n          src={'https://image.tmdb.org/t/p/w500/' + poster_path}\n          alt={original_title}\n          className={s.movieImg}\n        />\n        <div className={s.movieInfo}>\n          <h2 className={s.title}>\n            {original_title} {'(' + Date + ')'}\n          </h2>\n          <p>User score: {userScore}%</p>\n          <h5>Overview</h5>\n          <p>{overview}</p>\n          <h5>Genres </h5>\n          {genres && (\n            <ul className={s.listGenres}>\n              {genres.map(({ id, name }) => {\n                return (\n                  <li className={s.itemGenres} key={id}>\n                    {name}\n                  </li>\n                );\n              })}\n            </ul>\n          )}\n        </div>\n      </div>\n      <div className={s.linkSection}>\n        <h3>Additional information</h3>\n        <NavLink\n          to=\"cast\"\n          className={navData => (navData.isActive ? s.active : s.link)}\n        >\n          Cast\n        </NavLink>\n        <NavLink\n          to=\"reviews\"\n          className={navData => (navData.isActive ? s.active : s.link)}\n        >\n          Reviews\n        </NavLink>\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '0bad0c478cca5baa77b2d3f25afa29cf';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport async function getMovies() {\n  const response = await axios.get(\n    `${URL}trending/movie/week?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieById(movieId) {\n  const response = await axios.get(`${URL}movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n}\n\nexport async function getMovieCast(movieId) {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMovieReview(movieId) {\n  const response = await axios.get(\n    `${URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n}\n\nexport async function getMoviesBySearchForm(movieName) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie/?api_key=${API_KEY}&query=${movieName}&page=1`\n  );\n\n  return response;\n}\n"],"names":["MovieInfo","movieId","useParams","useState","movie","setMovie","useEffect","getMovieById","then","data","Date","String","release_date","slice","userScore","vote_average","original_title","overview","genres","poster_path","location","useLocation","navigate","useNavigate","className","s","onClick","state","from","src","alt","map","id","name","to","navData","isActive","API_KEY","URL","getMovies","axios","response","getMovieCast","getMovieReview","getMoviesBySearchForm","movieName"],"sourceRoot":""}